<section class="container">
  <h1>{@location.name}</h1>

  <AthenaWeb.Frontend.Location.Tabs.tabs
    active_tab={:stats}
    socket={@socket}
    location={@location}
  />

  <%= for {item_group_id, _stats} <- @item_totals, %ItemGroup{name: item_group_name} = Enum.find(@location.event.item_groups, &match?(%ItemGroup{id: ^item_group_id}, &1)) do %>
    <a class="bookmark" href={"#location_totals_chart_#{item_group_id}_chart"}>
      {item_group_name}
    </a>
  <% end %>

  <%= for {item_group_id, item_totals_by_group} <- @item_totals, %ItemGroup{name: item_group_name} = Enum.find(@location.event.item_groups, &match?(%ItemGroup{id: ^item_group_id}, &1)) do %>
    <AthenaWeb.Chart.chart
      dom_id={"location_totals_chart_#{item_group_id}"}
      config={
        %{
          type: "line",
          options: %{
            scales: %{
              y: %{
                title: %{display: false, text: gettext("Units")},
                ticks: %{color: "#efbb35"},
                stacked: true
              },
              x: %{
                type: :time,
                time: %{tooltipFormat: "DD T"},
                ticks: %{
                  autoskip: true,
                  major: %{enabled: true},
                  maxRotation: 0,
                  color: "#efbb35"
                },
                title: %{
                  display: false,
                  text: gettext("Time")
                }
              }
            },
            plugins: %{
              title: %{
                text: item_group_name,
                display: true
              },
              legend: %{
                position: "bottom"
              },
              zoom: %{
                pan: %{
                  enabled: true,
                  mode: "x"
                },
                zoom: %{
                  wheel: %{
                    enabled: true
                  },
                  pinch: %{
                    enabled: true
                  },
                  mode: "x"
                }
              }
            },
            elements: %{
              point: %{
                radius: 0
              }
            },
            interaction: %{
              mode: "nearest",
              axis: "x",
              intersect: false
            }
          },
          data: %{
            datasets:
              item_totals_by_group
              |> Enum.group_by(&elem(&1, 0), &%{y: elem(&1, 1), x: elem(&1, 2)})
              |> Enum.map(fn {item_id, totals} ->
                item_name =
                  Enum.find_value(@location.event.items, fn
                    %Item{id: ^item_id, name: item_name} -> item_name
                    _item -> false
                  end)

                %{label: item_name, data: totals, tension: 0.15, fill: true}
              end)
          }
        }
      }
    />
  <% end %>
</section>
